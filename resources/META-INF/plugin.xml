<idea-plugin version="2">
    <id>com.karateca.jstoolbox</id>
    <name>JS Toolbox</name>
    <version>1.9</version>
    <vendor email="code@karateca.com" url="http://www.andresdominguez.com">
        Andres Dominguez
    </vendor>

    <description><![CDATA[
    <h1>JS Toolbox </h1>

    <p>An Intellij / Webstorm plugin that provides several tools for javascript development.</p>

    <p>Here is a list of available actions:</p>

    <ul>
      <li>Go to test [Alt T], [Ctrl Command T] on Mac</li>
      <li>Go to view [Alt V], [Ctrl Command V] on Mac</li>
      <li>Go to constructor [Alt G], [Ctrl Command G] on a mac</li>
      <li>Join multi-line strings and variable declarations [Ctrl SHIFT Alt J], [Ctrl Command J] on Mac</li>
      <li>Open current file in browser [Ctrl SHIFT Alt G], [SHIFT Option Command G] on Mac</li>
      <li>Add a semi-color at the end of the line [Ctrl SHIFT ;], [Command SHIFT ;] on Mac</li>
      <li>Sort the selection using a user-defined splitter [SHIFT alt 1], [Command SHIFT 1] on Mac</li>
      <li>Generate a method for the current javascript class</li>
      <li>Override a method from the parent javascript class</li>
    </ul>
    <p>See all the JS Toolbox actions from two locations:</p>

    <ul>
      <li>From Tools &gt; JS Toolbox</li>
      <li>From the editor, right click &gt; JS Toolbox</li>
    </ul>

    <h3>Go to test [Alt T], [Ctrl Command T] on Mac</h3>
    <p>
      Jump between a javascript file and its unit test. You can configure the
      file name patterns under:
    </p>
    <p>Settings > JS Toolbox</p>
    <p>
      And set values for <strong>Unit test suffix</strong> and
      <strong>File suffix</strong>
    </p>
    <p>
      If you need multiple patterns use comma. For example:<br><br>

      Unit test suffix: "Spec.js,-spec.js"<br>
      File suffix: "-controller.js,.js"<br><br>

      With this configuration the action will take you from:<br><br>

      "my-component.js" or "my-component-controller.js"<br><br>

      to<br><br>

      "my-componentSpec.js" or "my-component-spec.js"
    </p>

    <h3>Go to view [Alt V], [Ctrl Command V] on Mac</h3>
    <p>
      Jump between a javascript file and its associated view. You can
      configure the file name patterns under:
    </p>
    <p>
      Settings > JS Toolbox<br><br>

      And set values for <strong>View suffix</strong> and
      <strong>File suffix</strong><br><br>

      If you need multiple patterns use comma. For example:<br><br>

      File suffix: "-controller.js,.js"<br>
      View suffix: "-view.html,.html"<br><br>

      With this configuration the action will take you from:<br><br>

      "my-component.js" or "my-component-controller.js"<br><br>

      to<br><br>

      "my-component.html" or "my-component-view.html"
    </p>

    <h3>Toggle camel and dash case</h3>
    <p>
      Select some text and then choose the "Toggle camel and dash case" action
    </p>
    <pre>one-two-three</pre>
    <p>Will turn into</p>
    <pre>oneTwoThree</pre>

    <pre>oneTwoThree</pre>
    <p>Will turn into</p>
    <pre>one-two-three</pre>

    <h3>Go to constructor [Alt G], [Ctrl Command G] on a mac</h3>
    <p>
      Jump to the constructor of the current javascript file.
    </p>

    <h3>Join multi-line strings and variable declarations [Ctrl SHIFT Alt J], [Ctrl Command J] on Mac</h3>

    <p>Join strings and variable declarations</p>

    <p>Turn a multi-line string into a single string. Press Ctrl SHIFT Alt J on any of the string lines or select a
      block of text and join.</p>

    <pre>
    var s = 'one ' +
        'two ' +
        'three';
    </pre>

    <p>Into a single string:</p>

    <pre>
    var s = 'one two three';
    </pre>

    <p>Join multiple vars into a single var:</p>

    <pre>
    var foo = 1;
    var bar = 2;
    </pre>

    <p>Into a single var declaration:</p>

    <pre>
    var foo = 1,
        bar = 2;
    </pre>

    <h3>Open current file in browser [Ctrl SHIFT Alt G], [SHIFT Option Command G] on Mac</h3>

    <p>Open the current file in the browser. Configure the URL that you want to use when opening the browser under
      Settings &gt; JS Toolbox.</p>

    <h3>Generate a method for the current javascript class (Under generate menu)</h3>

    <p>Add a new method to the current javascript class. </p>

    <p>You need to use the @constructor annotation to mark the constructor of the class.</p>

    <h3>Override a method from the parent javascript class (Under generate menu)</h3>

    <p>Override a parent method in the current javascript class. </p>

    <p>You need to annotate the classes with the @constructor and @extends annotations, otherwise the plugin cannot find
      the class hierarchy.</p>

    <h3>Sort the selection using a user-defined splitter [Ctrl SHIFT 1], [Command SHIFT 1] on Mac</h3>

    <p>For example, select a bunch of arguments, choose sort, and enter a text (eg. ,) to split and sort the result.</p>
    ]]></description>

    <change-notes><![CDATA[
      <html>
      <ul>
        <li>1.9 - Implement toggle camel and dash case</li>
        <li>1.8 - Add actions for camel case and dash case</li>
        <li>1.7 - Improve the sort implementation. Add a new dialog</li>
        <li>1.6 - Improve the go view/test. Add line number in open in browser</li>
        <li>1.5 - Accept constructors starting with var. Change shortcuts for sort.</li>
        <li>1.4 - Add sort shortcut</li>
        <li>1.3 - Add shortcut to add a semicolon at the end of the current line.</li>
        <li>1.2.1 - Fix bug finding the parents in override javascript method</li>
        <li>1.2 - Add support for constructors with the following syntax: function MyConstructor() {}</li>
        <li>1.1 - Fix override method bug</li>
        <li>1.0 - Initial version</li>
      </ul>
      </html>
      ]]>
    </change-notes>

    <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Build+Number+Ranges for description -->
    <idea-version since-build="107.105"/>

    <depends>com.intellij.modules.lang</depends>

    <application-components>
        <!-- Add your application components here -->
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <actions>

        <!-- Add your actions here -->
        <action id="com.karateca.jstoolbox.joiner.JoinerAction"
                class="com.karateca.jstoolbox.joiner.JoinerAction" text="Join"
                description="Join a string or multiple variable declarations">
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt J"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta J"/>
        </action>

        <action id="com.karateca.jstoolbox.toconstructor.GoToConstructorAction"
                class="com.karateca.jstoolbox.toconstructor.GoToConstructorAction"
                text="Go to constructor"
                description="Go to the constructor">
            <keyboard-shortcut keymap="$default" first-keystroke="alt G"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta G"/>
        </action>

        <action id="com.karateca.jstoolbox.torelated.GoToTestAction"
                class="com.karateca.jstoolbox.torelated.GoToTestAction"
                text="Go to test"
                description="Go to the test file form the file of the view">
            <keyboard-shortcut keymap="$default" first-keystroke="alt T"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta T"/>
        </action>

        <action id="com.karateca.jstoolbox.torelated.GoToViewAction"
                class="com.karateca.jstoolbox.torelated.GoToViewAction"
                text="Go to view"
                description="Switch between the view and the controller">
            <keyboard-shortcut keymap="$default" first-keystroke="alt V"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta V"/>
        </action>

        <action id="com.karateca.jstoolbox.tobrowser.ToBrowserAction"
                class="com.karateca.jstoolbox.tobrowser.ToBrowserAction"
                text="Open in browser"
                description="Open the current file in browser">
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt G"/>
        </action>

        <action id="com.karateca.jstoolbox.generatemethod.GenerateMethodAction"
                class="com.karateca.jstoolbox.generatemethod.GenerateMethodAction"
                text="Generate javascript method"
                description="Generate a new method">
            <add-to-group group-id="GenerateGroup" anchor="last"/>
        </action>

        <action id="com.karateca.jstoolbox.generatemethod.OverrideMethodAction"
                class="com.karateca.jstoolbox.generatemethod.OverrideMethodAction"
                text="Override javascript method"
                description="Override a method from the parent">
            <add-to-group group-id="GenerateGroup" anchor="last"/>
        </action>

        <action id="com.karateca.jstoolbox.sort.SortSelection"
                class="com.karateca.jstoolbox.sort.SortSelection"
                text="Sort selection"
                description="Sort the currently selected items">
            <keyboard-shortcut keymap="$default" first-keystroke="shift alt 1"/>
            <keyboard-shortcut keymap="Mac OS X" first-keystroke="shift meta 1"/>
            <keyboard-shortcut keymap="Mac OS X 10.5+" first-keystroke="shift meta 1"/>
        </action>

        <action id="toggleCamelDashCase"
                class="com.karateca.jstoolbox.dashcamel.ToggleCamelDashCaseAction"
                text="Toggle camel and dash case"
                description="Turn selection into dash case if in camel case and vice versa"/>

        <action id="com.karateca.jstoolbox.config.ConfigurationViewAction"
                class="com.karateca.jstoolbox.config.ConfigurationViewAction"
                text="Go to config"
                description="Go to the config">
            <keyboard-shortcut keymap="$default" first-keystroke="alt C"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl meta C"/>
        </action>

        <!-- Add everything under tools -->
        <group id="TestActionGroup"
               text="JS Toolbox"
               description="JS Toolbox"
               popup="true">
            <reference ref="com.karateca.jstoolbox.joiner.JoinerAction"/>
            <reference ref="com.karateca.jstoolbox.toconstructor.GoToConstructorAction"/>
            <reference ref="com.karateca.jstoolbox.torelated.GoToTestAction"/>
            <reference ref="com.karateca.jstoolbox.torelated.GoToViewAction"/>
            <reference ref="com.karateca.jstoolbox.tobrowser.ToBrowserAction"/>
            <reference ref="com.karateca.jstoolbox.sort.SortSelection"/>
            <reference ref="toggleCamelDashCase"/>
            <reference ref="com.karateca.jstoolbox.generatemethod.GenerateMethodAction"/>
            <reference ref="com.karateca.jstoolbox.generatemethod.OverrideMethodAction"/>
            <reference ref="com.karateca.jstoolbox.config.ConfigurationViewAction"/>
            <add-to-group group-id="ToolsMenu" anchor="first"/>
            <add-to-group group-id="EditorPopupMenu"/>
        </group>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <applicationConfigurable
                instance="com.karateca.jstoolbox.config.JsToolboxConfigurable"/>
    </extensions>
</idea-plugin>
